import javax.annotation.Resource;
import javax.ejb.Schedule;
import javax.ejb.Singleton;
import javax.ejb.Startup;
import javax.jms.*;

@Singleton
@Startup
public class DeadlineNotifier {

    @Resource(mappedName = "java:/ConnectionFactory")
    private ConnectionFactory connectionFactory;

    @Resource(mappedName = "java:/topic/TaskDeadlineTopic")
    private Topic topic;

    @Schedule(hour = "*", minute = "0", second = "0", persistent = false)
    public void checkDeadlines() {
        // Logic to check task deadlines and publish notifications to the topic
        try (Connection connection = connectionFactory.createConnection();
             Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
             MessageProducer producer = session.createProducer(topic)) {

            // Publish reminder messages to assignees one day prior to the deadline
            Message reminderMessage = session.createTextMessage("Reminder: Your task deadline is approaching!");
            producer.send(reminderMessage);
            
            // Publish escalation messages to reporters for tasks that have exceeded the deadline
            Message escalationMessage = session.createTextMessage("Escalation: Task deadline has passed without completion!");
            producer.send(escalationMessage);

        } catch (JMSException e) {
            e.printStackTrace();
        }
    }

    // Subscribe to the topic and consume messages (if needed)
    // Implement message-driven bean or another component to handle incoming messages
}





////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

import javax.annotation.Resource;
import javax.jms.*;

public class TopicExample {

    @Resource(mappedName = "java:/ConnectionFactory")
    private static ConnectionFactory connectionFactory;

    @Resource(mappedName = "java:/topic/YourTopicName")
    private static Topic topic;

    public static void main(String[] args) {
        try (Connection connection = connectionFactory.createConnection();
             Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE)) {
            
            MessageProducer producer = session.createProducer(topic);
            TextMessage message = session.createTextMessage("Hello, world!");
            producer.send(message);
            System.out.println("Message sent to topic: " + message.getText());

            MessageConsumer consumer = session.createConsumer(topic);
            connection.start();
            TextMessage receivedMessage = (TextMessage) consumer.receive();
            System.out.println("Received message from topic: " + receivedMessage.getText());

        } catch (JMSException e) {
            e.printStackTrace();
        }
    }
}
